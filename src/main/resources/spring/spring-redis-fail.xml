<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--redis连接池配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--控制一个pool可分配多少个jedis实例-->
        <property name="maxTotal" value="${redis.pool.maxActive}"/>
        <!--连接池中最多可空闲maxIdle个连接，这里取值为20，表示即使没有连接也可以保持20个连接对象-->
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <!--最大的等待时间：当没有可用连接时，连接池等待连接被归还的最大时间（一毫秒计数），超过时间则抛出异常-->
        <property name="maxWaitMillis" value="${redis.pool.maxWait}"/>
        <!--在获取连接的时候检查有效性-->
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
    </bean>

    <!--创建redis连接池，并做相关配置-->
    <bean id="jedisWritePool" class="com.zxc.o2o.cache.JedisPoolWriper"
     depends-on="jedisPoolConfig">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.hostname}"/>
        <constructor-arg index="2" value="${redis.port}" type="int"/>
    </bean>

    <!--创建redis工具类，封装好redis的连接以进行相关操作-->
    <bean id="jedisUtil" class="com.zxc.o2o.cache.JedisUtil" scope="singleton">
         <property name="jedisPool">
             <ref bean="jedisWritePool"/>
         </property>
    </bean>

    <!--redis的key的操作 scope="singleton"默认设置-->
    <bean id="jedisKeys" class="com.zxc.o2o.cache.JedisUtil$KEYS">
        <constructor-arg ref="jedisUtil"/>
    </bean>

    <!--redis的String操作-->
    <bean id="jedisStrings" class="com.zxc.o2o.cache.JedisUtil$STRINGS">
        <constructor-arg ref="jedisUtil"/>
    </bean>

    <bean id="jedisLists" class="com.zxc.o2o.cache.JedisUtil$LISTS">
        <constructor-arg ref="jedisUtil"></constructor-arg>
    </bean>

    <bean id="jedisSets" class="com.zxc.o2o.cache.JedisUtil$SETS">
        <constructor-arg ref="jedisUtil"></constructor-arg>
    </bean>

    <bean id="jedisHash" class="com.zxc.o2o.cache.JedisUtil$HASH">
        <constructor-arg ref="jedisUtil"></constructor-arg>
    </bean>
</beans>